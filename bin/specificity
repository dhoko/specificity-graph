#!/usr/bin/env node

'use strict';


var path = require('path');
var fs = require('fs');
var colors = require('cli-color');
var program = require('commander');
var parser = require('../lib/generateCssData');
var stats = require('../lib/cssStats');
var outputCli = require('../lib/outputStatsCli');

program
  .option('-l, --limit', 'Add a limit for selector (over this limit, selectors are bad). Default 25')
  .option('-a, --analytics', 'Display analytics about your CSS')
  .option('-v, --verbose')
  .option('-o, --output', 'Ouput destination')
  .parse(process.argv);

var input = program.args[0] ? path.resolve(program.args[0]) : null;
var output = program.ouput ? path.resolve(program.output) : null;

if (input && !fs.existsSync(input)) {
  console.error(colors.red('Unable to read file'), input);
  process.exit(1);
}

if(input) {

  var css = fs.readFileSync(input);
  var specificity = parser(css.toString());

  if(program.verbose) {
    var output = stats(specificity);
    outputCli.display(output, specificity);
    program.analytics && outputCli.analytics(output);
  }
}



// console.log(input)

if(!input) {
  process.stdin.resume();
  process.stdin.setEncoding('utf8');

  var buffer = '';
  process.stdin.on('data', function(data) {
      buffer += data;
  });

  process.stdin.on('end', function() {
    var specificity = parser(buffer);
    var output = stats(specificity);
    console.log('yolo')
  });
}